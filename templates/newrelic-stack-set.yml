AWSTemplateFormatVersion: 2010-09-09
Description: Integrates New Relic with AWS accounts that use AWS Control Tower. This deployment launches as a stack set in your AWS Control Tower landing zone.(qs-1rsulpe1p)
Parameters:
  NewRelicAccountNumber:
    Type: String
    Description: New Relic account ID
    AllowedPattern: '[0-9]+'
    ConstraintDescription: New Relic account ID contains only numbers
  PolicyName: 
    Type: String
    Default: NewRelicIntegrationRole
    Description: 'Policy name for the role. If you provide no value, the deployment uses 
    ReadOnlyAccess by default, which is managed by AWS. This default role automatically 
    inherits permissions as new services are added but includes a broad set of permissions 
    that are not required by New Relic. If you provide a value, a custom policy 
    is created using the name you specify. This custom policy includes only minimal permissions 
    that allow New Relic to monitor your Lambda functions. Note that you are responsible for 
    managing a custom policy.'
  NewRelicTrustedPrincipal:
    Type: String
    Default: 754728514883
    Description: 'New Relic AWS Account Id for integration with customer AWS account. https://docs.newrelic.com/docs/integrations/amazon-integrations/get-started/connect-aws-new-relic-infrastructure-monitoring/'

Conditions: 
  UseCustomPolicy: !Not [!Equals [ !Ref PolicyName, '']]
  UseDefaultPolicy: !Equals [ !Ref PolicyName, '']
  
Resources:
  NewRelicDefaultPolicyRole:
    Type: 'AWS::IAM::Role'
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: "New Relic must use unique IAM role names to identify them."
    Condition: UseDefaultPolicy
    Properties:
      ManagedPolicyArns: 
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/ReadOnlyAccess'
      RoleName: !Join ['_', ['NewRelicIntegrationRole', !Ref NewRelicAccountNumber]]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${NewRelicTrustedPrincipal}:root'
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref NewRelicAccountNumber

  NewRelicCustomPolicyRole:
    Type: 'AWS::IAM::Role'
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: "New Relic must use unique IAM role names to identify them."
    Condition: UseCustomPolicy
    Properties:
      RoleName: !Join ['_', ['NewRelicIntegrationRole', !Ref NewRelicAccountNumber]]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${NewRelicTrustedPrincipal}:root'
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref NewRelicAccountNumber

# Policy reference from: https://docs.newrelic.com/docs/integrations/amazon-integrations/get-started/integrations-managed-policies/#list-permissions                
  NewRelicCustomPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F5
            reason: 'AWS does not support resource ARNs in the resource element of IAM policy statements. For AWS support, add “Resource”: “*” to your policy.'
          - id: W13
            reason: "New Relic requires permission to read telemetry data from all AWS resources in your account."
          - id: W28
            reason: "New Relic must use unique IAM role names to identify them."
#      cfn-lint:
#        config:
#          ignore_checks:
            # TrustedAdvisor access at the moment requires permission wildcard `support:*`
            #- EIAMPolicyActionWildcard
    Condition: UseCustomPolicy
    Properties:    
      ManagedPolicyName: !Ref PolicyName
      Roles:
        - !Ref NewRelicCustomPolicyRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:      
              - 'elasticloadbalancing:DescribeLoadBalancers'
              - 'elasticloadbalancing:DescribeTargetGroups'
              - 'elasticloadbalancing:DescribeTags'
              - 'elasticloadbalancing:DescribeLoadBalancerAttributes'
              - 'elasticloadbalancing:DescribeListeners'              
              - 'elasticloadbalancing:DescribeRules'
              - 'elasticloadbalancing:DescribeTargetGroupAttributes'              
              - 'elasticloadbalancing:DescribeInstanceHealth'              
              - 'elasticloadbalancing:DescribeLoadBalancerPolicies'
              - 'elasticloadbalancing:DescribeLoadBalancerPolicyTypes'
              - 'apigateway:GET'
              - 'apigateway:HEAD'
              - 'apigateway:OPTIONS'
              - 'autoscaling:DescribeLaunchConfigurations'
              - 'autoscaling:DescribeAutoScalingGroups'
              - 'autoscaling:DescribePolicies'
              - 'autoscaling:DescribeTags'
              - 'autoscaling:DescribeAccountLimits'
              - 'budgets:ViewBudget'
              - 'cloudfront:ListDistributions'
              - 'cloudfront:ListStreamingDistributions'
              - 'cloudfront:ListTagsForResource'
              - 'cloudtrail:LookupEvents'
              - 'dynamodb:DescribeLimits'
              - 'dynamodb:ListTables'
              - 'dynamodb:DescribeTable'
              - 'dynamodb:ListGlobalTables'
              - 'dynamodb:DescribeGlobalTable'
              - 'dynamodb:ListTagsOfResource'
              - 'ec2:DescribeVolumesModifications'
              - 'ec2:DescribeVolumes'
              - 'ec2:DescribeVolumeStatus'
              - 'ec2:DescribeVolumeAttribute'
              - 'ec2:DescribeInstanceStatus'
              - 'ec2:DescribeInstances'
              - 'ecs:ListServices'
              - 'ecs:DescribeServices'
              - 'ecs:DescribeClusters'
              - 'ecs:ListClusters'
              - 'ecs:ListTagsForResource'
              - 'ecs:ListContainerInstances'
              - 'ecs:DescribeContainerInstances'
              - 'elasticfilesystem:DescribeMountTargets'
              - 'elasticfilesystem:DescribeFileSystems'
              - 'elasticache:DescribeCacheClusters'
              - 'elasticache:ListTagsForResource'
              - 'es:ListDomainNames'
              - 'es:DescribeElasticsearchDomain'
              - 'es:DescribeElasticsearchDomains'
              - 'es:ListTags'
              - 'elasticbeanstalk:DescribeEnvironments'
              - 'elasticbeanstalk:DescribeInstancesHealth'
              - 'elasticbeanstalk:DescribeConfigurationSettings'
              - 'elasticloadbalancing:DescribeLoadBalancers'
              - 'elasticmapreduce:ListInstances'
              - 'elasticmapreduce:ListClusters'
              - 'elasticmapreduce:DescribeCluster'
              - 'elasticmapreduce:ListInstanceGroups'
              - 'elasticmapreduce:ListInstanceFleets'
              - 'health:DescribeAffectedEntities'
              - 'health:DescribeEventDetails'
              - 'health:DescribeEvents'
              - 'iam:ListSAMLProviders'
              - 'iam:ListOpenIDConnectProviders'
              - 'iam:ListServerCertificates'
              - 'iam:GetAccountAuthorizationDetails'
              - 'iam:ListVirtualMFADevices'
              - 'iam:GetAccountSummary'
              - 'iot:ListTopicRules'
              - 'iot:GetTopicRule'
              - 'iot:ListThings'
              - 'firehose:DescribeDeliveryStream'
              - 'firehose:ListDeliveryStreams'
              - 'kinesis:ListStreams'
              - 'kinesis:DescribeStream'
              - 'kinesis:ListTagsForStream'
              - 'rds:ListTagsForResource'
              - 'rds:DescribeDBInstances'
              - 'rds:DescribeDBClusters'
              - 'route53:ListHealthChecks'
              - 'route53:GetHostedZone'
              - 'route53:ListHostedZones'
              - 'route53:ListResourceRecordSets'
              - 'route53:ListTagsForResources'
              - 's3:GetLifecycleConfiguration'
              - 's3:GetBucketTagging'
              - 's3:ListAllMyBuckets'
              - 's3:GetBucketWebsite'
              - 's3:GetBucketLogging'
              - 's3:GetBucketCORS'
              - 's3:GetBucketVersioning'
              - 's3:GetBucketAcl'
              - 's3:GetBucketNotification'
              - 's3:GetBucketPolicy'
              - 's3:GetReplicationConfiguration'
              - 's3:GetMetricsConfiguration'
              - 's3:GetAccelerateConfiguration'
              - 's3:GetAnalyticsConfiguration'
              - 's3:GetBucketLocation'
              - 's3:GetBucketRequestPayment'
              - 's3:GetEncryptionConfiguration'
              - 's3:GetInventoryConfiguration'
              - 's3:GetIpConfiguration'
              - 'ses:ListConfigurationSets'
              - 'ses:GetSendQuota'
              - 'ses:DescribeConfigurationSet'
              - 'ses:ListReceiptFilters'
              - 'ses:ListReceiptRuleSets'
              - 'ses:DescribeReceiptRule'
              - 'ses:DescribeReceiptRuleSet'
              - 'sns:GetTopicAttributes'
              - 'sns:ListTopics'
              - 'sqs:ListQueues'
              - 'sqs:ListQueueTags'
              - 'sqs:GetQueueAttributes'
              - 'tag:GetResources'
              - 'ec2:DescribeInternetGateways'
              - 'ec2:DescribeVpcs'
              - 'ec2:DescribeNatGateways'
              - 'ec2:DescribeVpcEndpoints'
              - 'ec2:DescribeSubnets'
              - 'ec2:DescribeNetworkAcls'
              - 'ec2:DescribeVpcAttribute'
              - 'ec2:DescribeRouteTables'
              - 'ec2:DescribeSecurityGroups'
              - 'ec2:DescribeVpcPeeringConnections'
              - 'ec2:DescribeNetworkInterfaces'
              - 'ec2:DescribeVpnConnections'
              - 'redshift:DescribeClusters'
              - 'redshift:DescribeClusterParameters'
              - 'lambda:GetAccountSettings'
              - 'lambda:ListFunctions'
              - 'lambda:ListAliases'
              - 'lambda:ListTags'
              - 'lambda:ListEventSourceMappings'
              - 'cloudwatch:GetMetricStatistics'
              - 'cloudwatch:ListMetrics'
              - 'cloudwatch:GetMetricData'
              - 'support:*'
              - 'xray:BatchGetTraces'
              - 'xray:GetInsightSummaries'
              - 'xray:GetServiceGraph'
              - 'xray:GetInsightImpactGraph'
              - 'xray:GetTraceSummaries'
              - 'xray:GetGroups'
              - 'xray:GetSamplingStatisticSummaries'
              - 'xray:GetTraceGraph'
              - 'xray:GetSamplingRules'
              - 'xray:GetEncryptionConfig'
              - 'xray:GetSamplingTargets'
              - 'xray:GetTimeSeriesServiceStatistics'
              - 'xray:GetGroup'
              - 'xray:GetInsight'
              - 'xray:GetInsightEvents'
            Resource: '*'